/*
 * This file is part of SQL Workbench/J, https://www.sql-workbench.eu
 *
 * Copyright 2002-2022, Thomas Kellerer
 *
 * Licensed under a modified Apache License, Version 2.0
 * that restricts the use for certain governments.
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at.
 *
 *     https://www.sql-workbench.eu/manual/license.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * To contact the author please send an email to: support@sql-workbench.eu
 *
 */
package workbench.gui.settings;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

import workbench.interfaces.Restoreable;
import workbench.resource.ResourceMgr;

import workbench.gui.dbobjects.objecttree.ComponentPosition;
import workbench.gui.dbobjects.objecttree.DbTreeSettings;

/**
 *
 * @author  Thomas Kellerer
 */
public class DbTreeOptionsPanel
  extends JPanel
  implements Restoreable, ActionListener
{
  public DbTreeOptionsPanel()
  {
    super();
    initComponents();
    String[] locations = new String[] {
      ResourceMgr.getString("TxtTabLeft"),
      ResourceMgr.getString("TxtTabRight"),
    };
    treePosition.setModel(new DefaultComboBoxModel(locations));
    invalidate();
  }

  @Override
  public void restoreSettings()
  {
    useTabConnection.setSelected(DbTreeSettings.useTabConnection());
    searchAsYouType.setSelected(DbTreeSettings.getFilterWhileTyping());
    ComponentPosition position = DbTreeSettings.getDbComponentPosition();
    switch (position)
    {
      case left:
        treePosition.setSelectedIndex(0);
        break;
      case right:
        treePosition.setSelectedIndex(1);
        break;
    }
  }

  @Override
  public void saveSettings()
  {
    DbTreeSettings.setUseTabConnection(useTabConnection.isSelected());
    DbTreeSettings.setFilterWhileTyping(searchAsYouType.isSelected());
    int selected = treePosition.getSelectedIndex();
    switch (selected)
    {
      case 0:
        DbTreeSettings.setDbComponentPosition(ComponentPosition.left);
        break;
      case 1:
        DbTreeSettings.setDbComponentPosition(ComponentPosition.right);
        break;
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    GridBagConstraints gridBagConstraints;

    useTabConnection = new JCheckBox();
    searchAsYouType = new JCheckBox();
    jLabel1 = new JLabel();
    treePosition = new JComboBox<>();
    jPanel1 = new JPanel();

    setLayout(new GridBagLayout());

    useTabConnection.setText(ResourceMgr.getString("LblTreeUseTabConnection")); // NOI18N
    useTabConnection.setToolTipText(ResourceMgr.getString("LblTreeUseTabConnection")); // NOI18N
    useTabConnection.setBorder(null);
    useTabConnection.addActionListener(this);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = GridBagConstraints.WEST;
    add(useTabConnection, gridBagConstraints);

    searchAsYouType.setText(ResourceMgr.getString("LblTreeQuickFilter")); // NOI18N
    searchAsYouType.setToolTipText(ResourceMgr.getString("d_LblTreeQuickFilter")); // NOI18N
    searchAsYouType.setBorder(null);
    searchAsYouType.setHorizontalAlignment(SwingConstants.LEFT);
    searchAsYouType.setHorizontalTextPosition(SwingConstants.RIGHT);
    searchAsYouType.setIconTextGap(5);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = GridBagConstraints.WEST;
    gridBagConstraints.insets = new Insets(10, 0, 10, 0);
    add(searchAsYouType, gridBagConstraints);

    jLabel1.setText(ResourceMgr.getString("LblTreePosition")); // NOI18N
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = GridBagConstraints.LINE_START;
    gridBagConstraints.insets = new Insets(0, 0, 0, 10);
    add(jLabel1, gridBagConstraints);

    treePosition.setModel(new DefaultComboBoxModel<>(new String[] { "Left", "Right" }));
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = GridBagConstraints.LINE_START;
    add(treePosition, gridBagConstraints);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    add(jPanel1, gridBagConstraints);
  }

  // Code for dispatching events from components to event handlers.

  public void actionPerformed(ActionEvent evt)
  {
    if (evt.getSource() == useTabConnection)
    {
      DbTreeOptionsPanel.this.useTabConnectionActionPerformed(evt);
    }
  }// </editor-fold>//GEN-END:initComponents

  private void useTabConnectionActionPerformed(ActionEvent evt)//GEN-FIRST:event_useTabConnectionActionPerformed
  {//GEN-HEADEREND:event_useTabConnectionActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_useTabConnectionActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JLabel jLabel1;
  private JPanel jPanel1;
  private JCheckBox searchAsYouType;
  private JComboBox<String> treePosition;
  private JCheckBox useTabConnection;
  // End of variables declaration//GEN-END:variables

}
