/*
 * This file is part of SQL Workbench/J, https://www.sql-workbench.eu
 *
 * Copyright 2002-2022, Thomas Kellerer
 *
 * Licensed under a modified Apache License, Version 2.0
 * that restricts the use for certain governments.
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at.
 *
 *     https://www.sql-workbench.eu/manual/license.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * To contact the author please send an email to: support@sql-workbench.eu
 *
 */
package workbench.gui.components;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.Serializable;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

import workbench.resource.IconMgr;
import workbench.resource.ResourceMgr;

import workbench.gui.WbSwingUtilities;
import workbench.gui.editor.SyntaxStyle;


/**
 *
 * @author Thomas Kellerer
 */
public class WbFontStylePicker
  extends JPanel
  implements Serializable
{
  public WbFontStylePicker()
  {
    super();
    initComponents();

    fontStyle.setModel(new FontStyleComboBoxModel());

    int iconSize = IconMgr.getInstance().getSizeForLabel();
    int buttonSize = (int)(iconSize * 1.5);

    WbSwingUtilities.adjustButtonWidth(selectColorButton, buttonSize, buttonSize);

    Dimension d = new Dimension((int)(buttonSize * 0.9), (int)(buttonSize * 0.9));
    setButtonSize(sampleColor, d);
    sampleColor.setOpaque(true);
    sampleColor.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
  }

  public int getFontStyle()
  {
    return fontStyle.getSelectedIndex();
  }

  public void setFontStyle(int styleNumber)
  {
    if (styleNumber < 0 || styleNumber > 3) return;
    fontStyle.setSelectedIndex(styleNumber);
  }

  private void setButtonSize(JComponent button, Dimension d)
  {
    button.setPreferredSize(d);
    button.setMaximumSize(d);
    button.setMinimumSize(d);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    infoPanel = new JPanel();
    sampleColor = new JLabel();
    selectColorButton = new FlatButton();
    fontStyle = new JComboBox<>();

    setLayout(new FlowLayout(FlowLayout.LEFT, 0, 0));

    infoPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));

    sampleColor.setMinimumSize(new Dimension(16, 16));
    sampleColor.setPreferredSize(new Dimension(16, 16));
    infoPanel.add(sampleColor);

    selectColorButton.setText("...");
    selectColorButton.addActionListener(new ActionListener()
    {
      public void actionPerformed(ActionEvent evt)
      {
        selectColorButtonActionPerformed(evt);
      }
    });
    infoPanel.add(selectColorButton);

    add(infoPanel);

    fontStyle.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    add(fontStyle);
  }// </editor-fold>//GEN-END:initComponents

  private void selectColorButtonActionPerformed(ActionEvent evt)//GEN-FIRST:event_selectColorButtonActionPerformed
  {//GEN-HEADEREND:event_selectColorButtonActionPerformed
    Color newColor = JColorChooser.showDialog(SwingUtilities.getWindowAncestor(this),
                                              ResourceMgr.getString("TxtSelectColor"),
                                              this.getSelectedColor());
    if (newColor != null)
    {
      this.setSelectedColor(newColor);
    }
  }//GEN-LAST:event_selectColorButtonActionPerformed

  public void setStyle(SyntaxStyle style)
  {
    if (style == null) return;

    setSelectedColor(style.getColor());
    fontStyle.setSelectedIndex(style.getFontStyle());
  }

  public void setSelectedColor(Color c)
  {
    if (c != null)
    {
      sampleColor.setBackground(c);
    }
  }

  public Color getSelectedColor()
  {
    return sampleColor.getBackground();
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JComboBox<String> fontStyle;
  private JPanel infoPanel;
  private JLabel sampleColor;
  private JButton selectColorButton;
  // End of variables declaration//GEN-END:variables
}
